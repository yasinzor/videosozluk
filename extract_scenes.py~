import nltk
import json
import pysrt
import MySQLdb
import sys
import re
import time

def extract(filmName):
    db = MySQLdb.connect("127.0.0.1","root","","dizing" )
    cursor=db.cursor()
    # add film to the database
    movieName = filmName
    movieName = re.sub(r'(\.)*(\_)*(\s)*(\d)(.*)'," ", movieName)
    sql = "INSERT INTO movie(title,path) VALUES (%s,%s)"
    cursor.execute(sql, (movieName, filmName) )
    mid = cursor.lastrowid

    # get current words
    cursor.execute("SELECT wid, original, pos FROM words")
    rows = cursor.fetchall()
    words = dict()
    for row in rows:
        words[(row[1],row[2])] = row[0]

    tag_re = re.compile('<.*?>')

    from nltk.stem import WordNetLemmatizer
    wnl = WordNetLemmatizer()

    from nltk.corpus import wordnet as wn
    from nltk.stem.snowball import EnglishStemmer
    snowball_stemmer = EnglishStemmer()

    from nltk.corpus import stopwords
    stop = stopwords.words('english')
    subs = pysrt.open('filmler/%s/%s.srt' % (filmName, filmName), encoding='iso-8859-1')



    ignore = -1
    j=0
    tags=[]
    end = 0
    f = open('tmp/extract_terms.log', 'wr')

    ignoreList = []
    new_sub = None
    new_subs = []
    for (i,sub) in enumerate(subs):
      #print "Processing : %s i:%d il:%s" % (sub.text, i, ignoreList)
      text = sub.text.strip()
      text = re.sub(tag_re, '', text)

      if ignoreList == []:
          new_sub = { 'start': sub.start, 'text': "" }
      if text[-1] not in ".!?":
        ignoreList.append(i+1)
        new_sub['text'] += " " + text
        new_sub["end"] = sub.end
      else:
        new_sub["end"] = sub.end
        new_sub["text"] += " " + text
        new_subs.append(new_sub)
      if i in ignoreList:
        ignoreList.pop(0)

    frame = 5 * 1000   # 5 seconds before and after
    # for (i,sub) in enumerate(new_subs[:80]):
    for (i,sub) in enumerate(new_subs):
      # start time of scene
      scene = { 'sentence': sub['text'], 'start': sub['start'], 'end': sub['end'] }
      #print "%s time: %s" % (sub['text'],str(end - start))

      text = sub['text'].strip().lower()
      text = nltk.word_tokenize(text)
      tags = nltk.pos_tag(text)
      #print tags


      our_tags = { "NN": wn.NOUN, "JJ":wn.ADJ, "VB":wn.VERB, "RB":wn.ADV }

      sql = "INSERT INTO scene(mid,sentence,start,stop) VALUES (%s,%s,%s,%s)"
      cursor.execute(sql, (mid, sub['text'], sub['start'], sub['end']) )
      sid = cursor.lastrowid
      print "scene: %s\n" % (scene)
      f.write(str(scene)+ "\n")
      scene_words = set()
      for j in set(tags):
        base_pos = j[1][:2]
        word = j[0]
        if((word not in stop) and (base_pos in our_tags.keys()) and "'" not in word and word not in scene_words):
            scene_words.add(word)
            if ((word, base_pos) in words):
                wid = words[(word, base_pos)]
            else:
                wn_pos = our_tags[base_pos]
                stem=wnl.lemmatize(word, wn_pos)
                sql = "INSERT INTO words(original, pos, stem1, stem2) VALUES (%s,%s,%s,%s)"
                cursor.execute(sql, (word, base_pos, stem, snowball_stemmer.stem(word)))
                wid = cursor.lastrowid
                words[(word, base_pos)] = wid
            sql = "INSERT INTO words_scenes(wid, sid) VALUES (%d,%d)" % (int(wid),int(sid))
            cursor.execute(sql)
      db.commit()
    # db.commit()
    db.close()

if __name__ == "__main__":
   # print sys.argv
   try:
     extract(sys.argv[1])
   except MySQLdb.Error, e:
     print e
     print "Error %d: %s" % (e.args[0], e.args[1])
     sys.exit(1)
